/**
 * mapbox插件，类似迁徙图 MapboxPluginMigrate@1.0.1.min.js
 * 
 * @QQ 1174295440
 * @author Jiang Yang (Bestime)
 * @see https://github.com/bestime/mapbox-plugin/tree/master/examples/MapboxPluginMigrate
 * @update 2022-04-21 11:34:30
 */

var MapboxPluginMigrate=function(){function a(t,e,r,o){r=[(t[0]+e[0])/2-(t[1]-e[1])*r,(t[1]+e[1])/2-(e[0]-t[0])*r];return[n(t[0],r[0],e[0],o),n(t[1],r[1],e[1],o)]}function n(t,e,r,o){var n=1-o;return n*n*t+2*(1-o)*o*e+o*o*r}function t(t,e){try{t.getLayer(e)&&t.removeLayer(e)}catch(r){}}function e(t,e){try{t.hasImage(e)&&t.removeImage(e)}catch(r){}}function r(t,e){try{t.getSource(e)&&t.removeSource(e)}catch(r){}}function o(t,e){var r=Number(t),o=0;return e&&(""!==t&&null!=t||(o=r="")),r===Math.abs(Infinity)||/e/g.test(r)||isNaN(r)?o:r}var c,i="MapboxPluginMigrate";function s(t,e,r){c=r,this.records=[],this.timer=null,this.map=e,this.LAYER_ID_POINT=i+"layer-point"+t,this.LAYER_ID_PATH=i+"layer-path"+t,this.LAYER_ID_SHAN_ICON=i+"layer-shan"+t,this.SOURCE_ID_POINT=i+"source-point"+t,this.SOURCE_ID_PATH=i+"source-path"+t,this.SOURCE_ID_SHAN_ICON=i+"source-shan"+t,e.addSource(this.SOURCE_ID_SHAN_ICON,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),e.addLayer({id:this.LAYER_ID_SHAN_ICON,type:"symbol",source:this.SOURCE_ID_SHAN_ICON,layout:{"icon-image":["get","targetIcon"],"icon-rotation-alignment":"map","icon-allow-overlap":!0,"icon-ignore-placement":!0}}),e.addSource(this.SOURCE_ID_PATH,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),e.addLayer({id:this.LAYER_ID_PATH,source:this.SOURCE_ID_PATH,type:"line",paint:{"line-width":1,"line-color":["get","color"],"line-dasharray":["get","lineDashArray"]}}),e.addSource(this.SOURCE_ID_POINT,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),e.addLayer({id:this.LAYER_ID_POINT,source:this.SOURCE_ID_POINT,type:"symbol",layout:{"icon-size":["get","flyIconScale"],"icon-image":["get","flyIconId"],"icon-rotate":["get","bearing"],"icon-rotation-alignment":"map","icon-allow-overlap":!0,"icon-ignore-placement":!0}}),this.startPlay()}return s.prototype.getAllIconPoint=function(){return{type:"FeatureCollection",features:this.records.map(function(t){return{type:"Feature",properties:{targetIcon:t.targetIcon},geometry:{type:"Point",coordinates:t.data.path[1].coordinate}}})}},s.prototype.getAllLinesFeature=function(){return{type:"FeatureCollection",features:this.records.map(function(t){return{type:"Feature",properties:{color:t.data.color,lineDashArray:t.lineDashArray},geometry:{type:"LineString",coordinates:t.lines}}})}},s.prototype.getAllFlyFeature=function(){return{type:"FeatureCollection",features:this.records.map(function(t){return{type:"Feature",properties:{flyIconScale:t.flyIconScale,flyIconId:t.flyIconId,bearing:t.bearing},geometry:{type:"Point",coordinates:t.coordinates}}})}},s.prototype.dispose=function(){clearInterval(this.timer),t(this.map,this.LAYER_ID_POINT),t(this.map,this.LAYER_ID_PATH),t(this.map,this.LAYER_ID_SHAN_ICON),r(this.map,this.SOURCE_ID_POINT),r(this.map,this.SOURCE_ID_PATH),r(this.map,this.SOURCE_ID_SHAN_ICON),this.records.forEach(t=>{e(this.map,t.targetIcon),e(this.map,t.flyIconId)}),this.records=undefined},s.prototype.startPlay=function(){var i=this;clearInterval(this.timer),this.timer=setInterval(()=>{this.records.forEach(t=>{var e,r,o;function n(){t.count++,0<t.stopCount&&t.count>=t.stopCount&&(i.removeById(t.id),t.onRemove&&t.onRemove(t.id))}t["delete"]||(e=t.data.path[0].coordinate,o=t.data.path[1].coordinate,t.currentDistence+=t.direction*t.speed,t.currentDistence<=0?(r=e,t.direction*=-1,n()):t.currentDistence>=t.totalDistence?(t.currentDistence=t.totalDistence,clearInterval(this._timer),r=o,t.direction*=-1,n()):0!==t.curveness&&(r=a(e,o,t.curveness,t.currentDistence/t.totalDistence)),o=t.coordinates,t.coordinates=r,t.bearing=c.bearing(c.point(o),c.point(r)),this._updateFlyIcon())})},10)},s.prototype._updatePathAndTarget=function(){this.map.getSource(this.SOURCE_ID_PATH).setData(this.getAllLinesFeature()),this.map.getSource(this.SOURCE_ID_SHAN_ICON).setData(this.getAllIconPoint())},s.prototype._updateFlyIcon=function(){this.map.getSource(this.SOURCE_ID_POINT).setData(this.getAllFlyFeature())},s.prototype.removeById=function(t){for(var e=0;e<this.records.length;e++)this.records[e].id===t&&this.records.splice(e--,1);this._updateFlyIcon(),this._updatePathAndTarget()},s.prototype.add=function(e){var t;!function(t,e){for(var r=!1,o=t.length,n=0;n<o;n++)if(!0===e(t[n],n,t)){r=!0;break}return r}(this.records,function(t){return t.id===e.id})&&(t={type:"Feature",geometry:{type:"LineString",coordinates:[e.path[0].coordinate,e.path[1].coordinate]}},t=c.lineDistance(t,{units:"meters"}),this.records.push({id:e.id,"delete":!1,onRemove:e.onRemove,speed:e.speed,currentDistence:o(e.currentDistence),curveness:e.curveness,flyIconId:e.iconFly,flyIconScale:null==e.flyIconScale?1:e.flyIconScale,lineDashArray:e.lineDashArray||[4,2],targetIcon:e.iconTarget,percent:e.percent||0,direction:e.direction||1,data:e,bearing:0,count:0,stopCount:o(e.count),totalDistence:t,lines:function(t,e,r){for(var o,n=[t],i=0;i<1;i+=.01)o=a(t,e,r,i),n.push(o);return n.push(e),n}(e.path[0].coordinate,e.path[1].coordinate,e.curveness),coordinates:e.path[0].coordinate}),this._updatePathAndTarget())},s}();
