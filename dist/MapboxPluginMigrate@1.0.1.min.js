/**
 * mapbox插件，类似迁徙图 MapboxPluginMigrate@1.0.1.min.js
 * 
 * @QQ 1174295440
 * @author Jiang Yang (Bestime)
 * @see https://github.com/bestime/mapbox-plugin
 * @update 
 */

var MapboxPluginMigrate=function(){function a(t,e,o,r){o=[(t[0]+e[0])/2-(t[1]-e[1])*o,(t[1]+e[1])/2-(e[0]-t[0])*o];return[i(t[0],o[0],e[0],r),i(t[1],o[1],e[1],r)]}function i(t,e,o,r){var i=1-r;return i*i*t+2*(1-r)*r*e+r*r*o}function t(t,e){try{t.getLayer(e)&&t.removeLayer(e)}catch(o){}}function e(t,e){try{t.hasImage(e)&&t.removeImage(e)}catch(o){}}function o(t,e){try{t.getSource(e)&&t.removeSource(e)}catch(o){}}var s,r="MapboxPluginMigrate";function n(t,e,o){s=o,this.records=[],this.timer=null,this.map=e,this.LAYER_ID_POINT=r+"layer-point"+t,this.LAYER_ID_PATH=r+"layer-path"+t,this.LAYER_ID_SHAN_ICON=r+"layer-shan"+t,this.SOURCE_ID_POINT=r+"source-point"+t,this.SOURCE_ID_PATH=r+"source-path"+t,this.SOURCE_ID_SHAN_ICON=r+"source-shan"+t,e.addSource(this.SOURCE_ID_SHAN_ICON,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),e.addLayer({id:this.LAYER_ID_SHAN_ICON,type:"symbol",source:this.SOURCE_ID_SHAN_ICON,layout:{"icon-image":["get","targetIcon"],"icon-rotation-alignment":"map","icon-allow-overlap":!0,"icon-ignore-placement":!0}}),e.addSource(this.SOURCE_ID_PATH,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),e.addLayer({id:this.LAYER_ID_PATH,source:this.SOURCE_ID_PATH,type:"line",paint:{"line-width":2,"line-color":["get","color"],"line-dasharray":[4,2]}}),e.addSource(this.SOURCE_ID_POINT,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),e.addLayer({id:this.LAYER_ID_POINT,source:this.SOURCE_ID_POINT,type:"symbol",layout:{"icon-size":1,"icon-image":["get","flyIconId"],"icon-rotate":["get","bearing"],"icon-rotation-alignment":"map","icon-allow-overlap":!0,"icon-ignore-placement":!0}}),this.startPlay()}return n.prototype.getAllIconPoint=function(){return{type:"FeatureCollection",features:this.records.map(function(t){return{type:"Feature",properties:{targetIcon:t.targetIcon},geometry:{type:"Point",coordinates:t.data.path[1].coordinate}}})}},n.prototype.getAllLinesFeature=function(){return{type:"FeatureCollection",features:this.records.map(function(t){return{type:"Feature",properties:{color:t.data.color},geometry:{type:"LineString",coordinates:t.lines}}})}},n.prototype.getAllFlyFeature=function(){return{type:"FeatureCollection",features:this.records.map(function(t){return{type:"Feature",properties:{flyIconId:t.flyIconId,bearing:t.bearing},geometry:{type:"Point",coordinates:t.coordinates}}})}},n.prototype.dispose=function(){clearInterval(this.timer),t(this.map,this.LAYER_ID_POINT),t(this.map,this.LAYER_ID_PATH),t(this.map,this.LAYER_ID_SHAN_ICON),o(this.map,this.SOURCE_ID_POINT),o(this.map,this.SOURCE_ID_PATH),o(this.map,this.SOURCE_ID_SHAN_ICON),this.records.forEach(t=>{e(this.map,t.targetIcon),e(this.map,t.flyIconId)}),this.records=undefined},n.prototype.startPlay=function(){var n=this;clearInterval(this.timer),this.timer=setInterval(()=>{this.records.forEach(t=>{var e,o,r;function i(){t.count++,0<t.stopCount&&t.count>=t.stopCount&&(n.removeById(t.id),t.onRemove&&t.onRemove(t.id))}t["delete"]||(e=t.data.path[0].coordinate,r=t.data.path[1].coordinate,t.percent+=t.direction*t.speed,1<t.percent?(t.direction=-1,t.percent=1,i()):t.percent<=0&&(t.percent=0,t.direction=1,i()),o=t.coordinates,r=a(e,r,t.curveness,t.percent),t.coordinates=r,t.bearing=s.bearing(s.point(o),s.point(r)),this._updateFlyIcon())})},17)},n.prototype._updatePathAndTarget=function(){this.map.getSource(this.SOURCE_ID_PATH).setData(this.getAllLinesFeature()),this.map.getSource(this.SOURCE_ID_SHAN_ICON).setData(this.getAllIconPoint())},n.prototype._updateFlyIcon=function(){this.map.getSource(this.SOURCE_ID_POINT).setData(this.getAllFlyFeature())},n.prototype.removeById=function(t){for(var e=0;e<this.records.length;e++)this.records[e].id===t&&this.records.splice(e--,1);this._updateFlyIcon(),this._updatePathAndTarget()},n.prototype.add=function(e){var t,o,r,i;!function(t,e){for(var o=!1,r=t.length,i=0;i<r;i++)if(!0===e(t[i],i,t)){o=!0;break}return o}(this.records,function(t){return t.id===e.id})&&(this.records.push({id:e.id,"delete":!1,onRemove:e.onRemove,speed:e.speed,curveness:e.curveness,flyIconId:e.iconFly,targetIcon:e.iconTarget,direction:1,percent:0,data:e,bearing:0,count:0,stopCount:(t=e.count,r=Number(t),i=0,o&&(""!==t&&null!=t||(i=r="")),r===Math.abs(Infinity)||/e/g.test(r)||isNaN(r)?i:r),lines:function(t,e,o){for(var r,i=[t],n=0;n<1;n+=.01)r=a(t,e,o,n),i.push(r);return i.push(e),i}(e.path[0].coordinate,e.path[1].coordinate,e.curveness),coordinates:e.path[0].coordinate}),this._updatePathAndTarget())},n}();
